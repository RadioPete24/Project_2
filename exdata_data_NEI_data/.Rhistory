pch = 20,
xlab = "Residuals1",
ylab = expression(paste("Predicted Values, ", hat(Y))),
main = expression(paste("Model1 Residuals vs.", hat(Y))))
abline(h=0)
abline(h=,0)
abline(v=0)
plot(fuelEfficiency.fit2$fitted.values, fuelEfficiency.residuals1
pch = 20,
xlab = "Residuals",
ylab = expression(paste("Predicted Values, ", hat(Y))),
main = expression(paste("Model Residuals vs.", hat(Y))))
plot(fuelEfficiency.fit2$fitted.values, fuelEfficiency.residuals1,
pch = 20,
xlab = "Residuals",
ylab = expression(paste("Predicted Values, ", hat(Y))),
main = expression(paste("Model Residuals vs.", hat(Y))))
abline(h=0)
plot(fuelEfficiency.fit2$fitted.values, fuelEfficiency.residuals1,
pch = 20,
xlab = expression(paste("Predicted Values, ", hat(Y))),
ylab = "Residuals",
main = expression(paste("Model Residuals vs.", hat(Y))))
plot(fuelEfficiency.fit2$fitted.values, fuelEfficiency.residuals1,
pch = 20,
xlab = expression(paste("Predicted Values, ", hat(Y))),
ylab = "Residuals",
main = expression(paste(hat(Y), "vs. Model Residuals", )))
abline(h=0)
plot(fuelEfficiency.fit2$fitted.values, fuelEfficiency.residuals1,
pch = 20,
xlab = expression(paste("Predicted Values, ", hat(Y))),
ylab = "Residuals",
main = expression(paste(hat(Y), " vs. Model Residuals", )))
abline(h=0, col = "red")
pondCreatures.residuals1 <- residuals(pondCreatures.fit2)
pondCreatures.residuals1
pondCreatures.residuals1 <- residuals(pondCreatures.fit2)
pondCreatures.residuals1
plot(pondCreatures.fit2$fitted.values, pondCreatures.residuals1,
pch = 20,
xlab = expression(paste("Predicted Values, ", hat(Y))),
ylab = "Residuals",
main = expression(paste(hat(Y), " vs. Model Residuals", )))
abline(h=0, col = "red")
anova(pondCreatures.fit1, pondCreatures.fit2)
pondCreatures.stdRes1 <- rstandard(pondCreatures.fit2)
pondCreatures.stdRes1
#Normality Probability Plot of the Residuals with 95% CI set.
qqPlot(pondCreatures.stdRes1,
envelope = 0.95,
ylab = "Standardized Residuals",
main = "Normal Probability Plot of Residuals")
qqPlot(fuelEfficiency.stdRes1,
envelope = 0.95,
ylab = "Standardized Residuals",
main = "Normal Probability Plot of Residuals")
qqPlot(fuelEfficiency.stdRes1,
envelope = 0.95,
ylab = "Standardized Residuals",
main = "Normal Probability Plot of \nFuel Efficiency Residuals")
qqPlot(pondCreatures.stdRes1,
envelope = 0.95,
ylab = "Standardized Residuals",
main = "Normal Probability Plot of\nPond Creature Residuals")
plot(model2, main = "Tree Model of Daphnia Growth Rate")
model2 <- tree(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC,
data = pondCreatures)
plot(model2, main = "Tree Model of Daphnia Growth Rate")
text(model2)
library("rpart")
library("rpart.plot")
install.packages("rpart.plot")
library("rpart.plot", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data("pondCreatures")
tree <- rpart(Growth.rate ~ ., data = pondCreatures, method = "class")
rpart.plot(tree)
tree <- rpart(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC, data = pondCreatures, method = "class")
rpart.plot(tree)
pondCreatures.fit2 <- lm(Growth.rate ~ Daphnia + Water + (Daphnia*Water),
data = pondCreatures)
AIC(pondCreatures.fit2)
pondCreatures.fit2 <- lm(Growth.rate ~ Daphnia + Water + (Daphnia*Water) + Detergent,
data = pondCreatures)
AIC(pondCreatures.fit2)
model2 <- tree(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC,
data = pondCreatures)
plot(model2)
text(model2)
tree <- rpart(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC, data = pondCreatures, method = "class")
rpart.plot(tree)
plot(model2, main = "Tree Diagram of Daphnia Growth Rate")
plot(model2, title = "Tree Diagram of Daphnia Growth Rate")
text(model2, , main = "Tree Diagram of Daphnia Growth Rate")
text(model2, main = "Tree Diagram of Daphnia Growth Rate")
library(randomForest)
install.packages("randomForest")
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
fit <- randomForest(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC, data=pondCreatures)
print(fit)
model2 <- tree(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC,
data = pondCreatures)
fit <- randomForest(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC,
data = pondCreatures)
importance(fit)
fuelEfficiency.fit2
model1 <- tree(Mileage ~ Price + Country + Reliability + Type + Weight + Disp. + HP,
data = fuelEfficiency)
plot(model1)
text(model1)
ggpairs(fuelEfficiency, columns = 1:8, lower=list(continuous="smooth", params=c(method = "loess", fill="blue"),
diag=list(continuous="bar", params=c(colour="blue")),
upper=list(params=list(corSize=6)), axisLabels='show'),
title="Scatterplot Matrix of Fuel Efficiency with Mileage Model")
model2 <- tree(Growth.rate ~ Clone1 + Clone2 + Clone3 + Tyne + Wear + BrandA + BrandB + BrandC,
data = pondCreatures)
plot(model2)
text(model2)
ggplot(data = CXRdata, aes(x=CXR_quintile, y=GAG_GRP, colour = CXR_quintile)) + geom_point() +
ggtitle("Figure 9 - Gagne Comorbidity Score\nby Quartile Distribution) +
xlab("Gagne Comorbidity Score") +
ggplot(data = CXRdata, aes(x=CXR_quintile, y=GAG_GRP, colour = CXR_quintile)) + geom_point() +
ggtitle("Figure 9 - Gagne Comorbidity Score\n by Quartile Distribution) +
xlab("Gagne Comorbidity Score") +
ggplot(data = CXRdata, aes(x=CXR_quintile, y=GAG_GRP, colour = CXR_quintile)) + geom_point() +
ggtitle("Figure 9 - Gagne Comorbidity Score\n by Quartile Distribution") +
xlab("Gagne Comorbidity Score") +
ylab("Chest Radiograph Frequency\n(radiographs/day)")
library(ggplot2)
ggplot(data = CXRdata, aes(x=CXR_quintile, y=GAG_GRP, colour = CXR_quintile)) + geom_point() +
ggtitle("Figure 9 - Gagne Comorbidity Score\n by Quartile Distribution") +
xlab("Gagne Comorbidity Score") +
ylab("Chest Radiograph Frequency\n(radiographs/day)")
ggplot(data = CXRdata, aes(x=CXR_quintile, y=GAG_GRP, colour = CXR_quintile)) + geom_boxplot() +
ggtitle("Figure 9 - Gagne Comorbidity Score\n by Quartile Distribution") +
xlab("Gagne Comorbidity Score") +
ylab("Chest Radiograph Frequency\n(radiographs/day)")
ggplot(data = CXRdata, aes(x=CXR_quintile, y=GAG_GRP, colour = CXR_quintile)) + geom_point() +
ggtitle("Figure 9 - Gagne Comorbidity Score\n by Quartile Distribution") +
xlab("Gagne Comorbidity Score") +
ylab("Chest Radiograph Frequency\n(radiographs/day)")
CXR_q1 <- CXRdata[which(CXRdata$CXR_quintile = 1), ]
CXR_q1 <- CXRdata[which(CXRdata$CXR_quintile == 1), ]
View(CXR_q1)
View(CXR_q1)
CXR_q2 <- CXRdata[which(CXRdata$CXR_quintile == 2), ]
CXR_q3 <- CXRdata[which(CXRdata$CXR_quintile == 3), ]
CXR_q4 <- CXRdata[which(CXRdata$CXR_quintile == 4), ]
ggplot(CXR_q1, aes(x=GAG_GRP)) + geom_histogram(binwidth = 0.1, aes(fill = ..count..)) +
ggtitle("Figure 1 - Patient Distribution of\nChest Radiograph Frequencies") +
xlab("Chest Radiograph Frequency\n(radiographs/day)") +
ylab("Patient Count (n)") +
scale_x_continuous(limits=c(0, 4))
ggplot(CXR_q2, aes(x=GAG_GRP)) + geom_histogram(binwidth = 0.1, aes(fill = ..count..)) +
ggtitle("Figure 1 - Patient Distribution of\nChest Radiograph Frequencies") +
xlab("Chest Radiograph Frequency\n(radiographs/day)") +
ylab("Patient Count (n)") +
scale_x_continuous(limits=c(0, 4))
scale_y_continuous(limits=c(0,4000))
ggplot(CXRdata_subset, aes(x = CXR_freq, y = los, colour = CXR_quintile)) + geom_point() +
ggtitle("Length of Stay by \nFrequency of Chest Radiographs") +
xlab("Chest Radiograph Frequency (radiographs/day)") +
ylab("Length of Stay (days)") +
scale_x_continuous(limits=c(0, 4)) + scale_y_continuous(limits=c(0, 25))
ggplot(CXR_q2, aes(x=GAG_GRP)) + geom_histogram(binwidth = 0.1, aes(fill = ..count..)) +
ggtitle("Figure 1 - Patient Distribution of\nChest Radiograph Frequencies") +
xlab("Chest Radiograph Frequency\n(radiographs/day)") +
ylab("Patient Count (n)") +
scale_x_continuous(limits=c(0, 4)) +
scale_y_continuous(limits=c(0,4000))
ggplot(CXR_q1, aes(x=GAG_GRP)) + geom_histogram(binwidth = 0.1, aes(fill = ..count..)) +
ggtitle("Figure 1 - Patient Distribution of\nChest Radiograph Frequencies") +
xlab("Chest Radiograph Frequency\n(radiographs/day)") +
ylab("Patient Count (n)") +
scale_x_continuous(limits=c(0, 4))+
scale_y_continuous(limits=c(0,4000))
ggplot(data = CXRdata, aes(x=as.factor(area), y=GAG_GRP, colour = area)) + geom_boxplot() +
ggtitle("Gagne Comorbidity Score\nby Hospital Region") +
xlab("Hospital Region") +
ylab("Gagne Comorbidity Score")
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.05) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q2, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.05) +
ggtitle("CXRq2 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q3, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.05) +
ggtitle("CXRq3 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q4, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.05) +
ggtitle("CXRq4 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q2, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq2 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q3, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq3 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q4, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq4 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count")
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q2, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq2 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q3, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq3 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q4, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq4 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(CXRdata, aes(x=CXR_freq)) + geom_histogram(aes(y = ..ndensity..), binwidth = 0.05) +
stat_function(fun = dnorm, args = list(mean = mean(CXRdata$CXR_freq), sd = sd(CXRdata$CXR_freq)), color = "red") +
scale_x_continuous(limits=c(0, 2))
ggplot(CXRdata, aes(x=CXR_freq)) + geom_histogram(aes(y = ..ndensity..), binwidth = 0.05) +
stat_function(aes(y=..count..), fun = dlnorm, args = list(mean = -1.3, sd = 0.8), color = "red") +
scale_x_continuous(limits=c(0, 2))
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
ylab("Patient Count") +
xlab("Gagne Comorbidity Score") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.03) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.05) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q1, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.07) +
ggtitle("CXRq1 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q2, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.07) +
ggtitle("CXRq2 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q3, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.07) +
ggtitle("CXRq3 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
ggplot(data = CXR_q4, aes(x=GAG_GRP)) + geom_histogram(aes(y= ..ndensity..), binwidth = 0.07) +
ggtitle("CXRq4 Gagne Comorbidity Score\nby density") +
xlab("Gagne Comorbidity Score") +
ylab("Patient Count") +
scale_x_continuous(limits=c(0, 20))
install.packages("rvest")
?[fetchData]
install.packages("httr")
con<-GET('http://bustracker.pvta.com/InfoPoint/rest/stopdepartures/get/115')
GET('http://bustracker.pvta.com/InfoPoint/rest/stopdepartures/get/115')
require(httr)
GET('http://bustracker.pvta.com/InfoPoint/rest/stopdepartures/get/115')
con<-GET('http://bustracker.pvta.com/InfoPoint/rest/stopdepartures/get/115')
content(con)
require(rjson)
install.packages("rjson")
require(rjson)
str(content(con))
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("RJSONIO", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
require(ggplot2)
require(dplyr)
require(knitr)
require(scales)
require(grid)
setwd("~/Documents/JH_Courses/JH_Data/exdata_data_NEI_data/")
NEI <- readRDS("~/Documents/JH_Courses/JH_Data/exdata_data_NEI_data/summarySCC_PM25.rds")
row.names(NEI) <- NULL
SCC <- readRDS("~/Documents/JH_Courses/JH_Data/exdata_data_NEI_data/Source_Classification_Code.rds")
row.names(SCC) <- NULL
yrEmissTot <- aggregate(Emissions ~ year, FUN = sum, data = NEI)
barplot(
names.arg = yrEmissTot$year,
(yrEmissTot$Emissions)/10^6,
ylab = expression(PM[2.5]*~Emissions~" ("*10^"6"*" Tons)" ),
xlab = "Year",
in the United States from 1999-2008"
)
main = "Plot 1: Total Yearly Emissions from PM[2.5]
ggplot(yrEmissTot, aes(x = as.factor(year), y = Emissions/(10^6))) +
ggtitle('Plot1: Total Yearly PM[2.5]\nEmission in the United States from 1999-2008') +
geom_bar(stat = "identity") +
xlab("Year") +
ylab(expression(PM[2.5]*~Emissions~" ("*10^"6"*" Tons)" ))
yrEmissTot <- aggregate(Emissions ~ year, FUN = sum, data = NEI)
barplot(
(yrEmissTot$Emissions)/10^6,
names.arg = yrEmissTot$year,
xlab = "Year",
ylab = expression(PM[2.5]*~Emissions~" ("*10^"6"*" Tons)" ),
main = "Plot 1: Total Yearly Emissions from PM[2.5]
in the United States from 1999-2008"
)
ggplot(yrEmissTot, aes(x = as.factor(year), y = Emissions/(10^6))) +
ggtitle('Plot1: Total Yearly PM[2.5]\nEmission in the United States from 1999-2008') +
geom_bar(stat = "identity") +
xlab("Year") +
ylab(expression(PM[2.5]*~Emissions~" ("*10^"6"*" Tons)" ))
bMore_NEI <- filter(NEI, fips == "24510")
yrEmissTot_bMore <- aggregate(Emissions ~ year, FUN = sum, data = bMoreNEI)
yrEmissTot_bMore <- aggregate(Emissions ~ year, FUN = sum, data = bMore_NEI)
barplot(
yrEmissTot_bMore$Emissions,
names.arg=yrEmissTot_bMore$year,
xlab = "Year",
ylab = expression(PM[2.5]*~Emissions~" ("*10^"6"*" Tons)" ),
main="Plot 2: Total Yearly PM2.5 Emissions
in Baltimore City, Maryland from 1999-2008"
)
ggplot(bMore_NEI, aes(x = as.factor(year), y = Emissions)) +
ggtitle('Plot 2: Total Yearly PM[2.5] Emissions
in the United States from 1999-2008') +
geom_bar(stat = "identity") +
xlab("Year") +
ylab(expression(paste("PM"[2.5]*" Emissions (Tons)")))
dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
cat("Plot2.png has been saved in", getwd())
Q2 <- function(){
ggplot(bMore_NEI, aes(x = as.factor(year), y = Emissions)) +
ggtitle('Plot 2: Total Yearly PM[2.5] Emissions
in the United States from 1999-2008') +
geom_bar(stat = "identity") +
xlab("Year") +
ylab(expression(paste("PM"[2.5]*" Emissions (Tons)")))
dev.copy(png, file = "plot2.png", width = 480, height = 480)
dev.off()
cat("Plot2.png has been saved in", getwd())
}
Q2()
barplot(
yrEmissTot_bMore$Emissions,
names.arg=yrEmissTot_bMore$year,
xlab = "Year",
ylab = expression(PM[2.5]*~Emissions~" ("*10^"6"*" Tons)" ),
main="Plot 2: Total Yearly PM2.5 Emissions
in Baltimore City, Maryland from 1999-2008"
)
ggplot(bMore_NEI, aes(as.factor(year), Emissions, fill = type)) +
ggtitle(expression(paste("Plot 3: Total PM"[2.5]*" Emissions by Type in Baltimore City from 1999-2008"))) +
geom_bar(stat = "identity") +
facet_grid(. ~ type, scales = "free", space="free") +
xlab("year") +
ylab(expression(paste("PM"[2.5]*" Emission (Tons)"))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
guides(fill = FALSE)
combustion <- grepl(pattern = "comb", SCC$SCC.Level.One, ignore.case = TRUE)
coal <- grepl(pattern = "coal", SCC$SCC.Level.Three, ignore.case = TRUE)
coalCombustion_SCC <- SCC[coalCombustion,]$SCC
coalCombustion <- (combustion & coal)
coalCombustion_SCC <- SCC[coalCombustion,]$SCC
coalCombustion_SCC <- SCC[which(coal == TRUE & combustion == TRUE),]$SCC
NEI_select <- NEI[NEI$SCC %in% coalCombustion_SCC, ]
ggplot(NEI_select, aes(as.factor(year), Emissions/(10^5))) +
ggtitle(expression("Plot 4:Total PM"[2.5]*" Coal Combustion Emission in the US (1999-2008)")) +
geom_bar(stat = "identity", colour = "blue") +
guides(fill = FALSE) +
xlab("year") +
ylab(expression("PM"[2.5]*" Emission ("*10^"6"*" Tons)"))
ggplot(NEI_select, aes(as.factor(year), Emissions/(10^5))) +
ggtitle(expression("Plot 4:Total PM"[2.5]*" Coal Combustion Emission in the US (1999-2008)")) +
geom_bar(stat = "identity", fill = "blue") +
guides(fill = FALSE) +
xlab("year") +
ylab(expression("PM"[2.5]*" Emission ("*10^"6"*" Tons)"))
ggplot(NEI_select, aes(as.factor(year), Emissions/(10^5))) +
ggtitle(expression("Plot 4:Total PM"[2.5]*" Coal Combustion Emission in the US (1999-2008)")) +
geom_bar(stat = "identity", fill = "red") +
guides(fill = FALSE) +
xlab("year") +
ylab(expression("PM"[2.5]*" Emission ("*10^"6"*" Tons)")) +
scale_y_continuous(breaks = seq(0, 6, 1))
ggplot(NEI_select, aes(as.factor(year), Emissions/(10^5))) +
ggtitle(expression("Plot 4:Total PM"[2.5]*" Coal Combustion Emission in the US (1999-2008)")) +
geom_bar(stat = "identity", fill = "red") +
guides(fill = FALSE) +
xlab("year") +
ylab(expression("PM"[2.5]*" Emission ("*10^"5"*" Tons)")) +
scale_y_continuous(breaks = seq(0, 6, 1))
View(SCC)
View(SCC)
View(SCC)
View(SCC)
table(grepl("vehicle", SCC$EI.Sector, ignore.case = TRUE))
table(grepl("vehicle", SCC$SCC.Level.Two, ignore.case = TRUE))
table(grepl("vehicle", SCC$SCC.Level.Three, ignore.case = TRUE))
vehicles <- grepl("vehicle", SCC$SCC.Level.Two, ignore.case = TRUE)
vehicles_SCC <- SCC[vehicles, ]$SCC
coalCombustion_SCC <- SCC[which(grepl(pattern = "coal", SCC$SCC.Level.Three, ignore.case = TRUE) == TRUE & grepl(pattern = "comb", SCC$SCC.Level.One, ignore.case = TRUE) == TRUE),]$SCC
coalCombustion_SCC <- SCC[which(coal == TRUE & combustion == TRUE),]$SCC
SCC_vehicles <- SCC[vehicles, ]$SCC
rm(vehicles_SCC)
NEI_vehicles <- NEI[NEI$SCC %in% SCC_vehicles,]
SCC_vehicles <- SCC[which(vehicles == TRUE),]$SCC
SCC_vehicles <- SCC[vehicles, ]$SCC
NEI_vehicles <- NEI[NEI$SCC %in% SCC_vehicles,]
View(NEI_vehicles)
View(NEI_vehicles)
bMore_NEI_vehicles <- filter(NEI_vehicles, fips == "24510")
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510"",]
rm(bMore_NEI_vehicles)
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510"",]
rm(bMore_NEI_vehicles)
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510"",]
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510",]
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510",]
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510",]
#
)
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510",]
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510",]
rm(bMore_NEI_vehicles)
bMore_NEI_vehicles <- filter(NEI_vehicles, fips == "24510")
bMore_NEI_vehicles <- NEI_vehicles[NEI_vehicles$fips == "24510",]
ggplot(bMore_NEI_vehicles, aes(factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)"))
geom_bar(stat = "identity", fill = "blue") +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emission (Tons)"))
ggplot(bMore_NEI_vehicles, aes(factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)"))
View(bMore_NEI_vehicles)
View(bMore_NEI_vehicles)
ggplot(bMore_NEI_vehicles, aes(as.factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)"))
bMore_NEI_vehicles <- filter(NEI_vehicles, fips == "24510")
row.names(bMore_NEI_vehicles) <- NULL
View(bMore_NEI_vehicles)
View(bMore_NEI_vehicles)
ggplot(bMore_NEI_vehicles, aes(as.factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)")) +
geom_bar(stat = "identity", fill = "blue") +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emission (Tons)"))
guides(fill = FALSE)
ggplot(bMore_NEI_vehicles, aes(as.factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)")) +
geom_bar(stat = "identity", fill = "blue") +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emission (Tons)")) +
guides(fill = FALSE)
NEI_vehicles_LAbMore <- filter(NEI_vehicle, fips == "24510" | fips == "06037")
NEI_vehicles_LAbMore <- filter(NEI_vehicles, fips == "24510" | fips == "06037")
View(NEI_vehicles_LAbMore)
View(NEI_vehicles_LAbMore)
NEIvehicleBalti<-subset(NEI_vehicles, fips == "24510")
NEIvehicleBalti$city <- "Baltimore City"
NEIvehiclela<-subset(NEI_vehicles, fips == "06037")
NEIvehiclela$city <- "Los Angeles County"
NEIBothCity <- rbind(NEIvehicleBalti, NEIvehiclela)
NEI_vehicles_LAbMore$city [NEI_vehicles_LAbMore$fips == "24510"] <- "Baltimore"
NEI_vehicles_LAbMore$city [NEI_vehicles_LAbMore$fips == "06037"] <- "Baltimore"
NEI_vehicles_LAbMore$city [NEI_vehicles_LAbMore$fips == "06037"] <- "Los Angeles"
View(NEI_vehicles_LAbMore)
View(NEI_vehicles_LAbMore)
ggplot(NEI_vehicles_LAbMore, aes(x=year, y=Emissions, fill = city)) +
geom_bar(aes(fill=year),stat="identity") +
facet_grid(.~city) +
guides(fill=FALSE) + theme_bw() +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
ggplot(bMore_NEI_vehicles, aes(as.factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)")) +
geom_bar(stat = "identity", fill = year) +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emission (Tons)")) +
guides(fill = FALSE)
ggplot(bMore_NEI_vehicles, aes(as.factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)")) +
geom_bar(stat = "identity", fill = as.factor(year)) +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emission (Tons)")) +
guides(fill = FALSE)
ggplot(bMore_NEI_vehicles, aes(as.factor(year), Emissions)) +
ggtitle(expression("Plot 5:Total PM"[2.5]*" Motor Vehicle Emissions in Baltimore, MD (1999-2008)")) +
geom_bar(aes(fill = year), stat = "identity") +
xlab("year") +
ylab(expression("Total PM"[2.5]*" Emission (Tons)")) +
guides(fill = FALSE)
